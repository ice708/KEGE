# https://yandex.ru/tutor/subject/problem/?problem_id=T30248
# Для узла с IP-адресом 98.162.71.123 адрес сети равен 98.162.71.112
# Чему равен последний (самый правый) байт маски?
# Ответ: 240

# Решение
# 98.162.71.123 = 01100010.10100010.01000111.01111011
# 98.162.71.112 = 01100010.10100010.01000111.01110000
# маска сети    = 11111111.11111111.11111111.11110000

# маска подсети будет иметь следующие биты:
# - 1 для каждого бита в IP-адресе, совпадающего с адресом сети,
# - 0 для каждого бита, различающегося.

# Последний байт = 11110000, что в 10-ой системе счисления = 240


from ipaddress import *

# Задаем IP-адрес узла и адрес сети
node_ip = IPv4Address('98.162.71.123')
network_ip = IPv4Address('98.162.71.112')

# Преобразуем IP-адреса в двоичный формат
node_bin = bin(int(node_ip))[2:].zfill(32)
print(node_bin)

network_bin = bin(int(network_ip))[2:].zfill(32)
print(network_bin)

# Вычисляем длину префикса (количество совпадающих битов)
prefix_len = 0

for i in range(32):
    if node_bin[i] == network_bin[i]:
        prefix_len += 1
    else:
        break

# Создаем сеть с длиной префикса
subnet_mask = IPv4Network(f"{network_ip}/{prefix_len}", strict=False).netmask
print(subnet_mask)

# Выводим значение последнего (четвертого) байта маски подсети
last_byte_mask = subnet_mask.packed[-1]     # .packed - атрибут, который преобразует IP-адрес
                                            # или маску подсети в его байтовое представление

print(f"Последний байт маски подсети: {last_byte_mask}")